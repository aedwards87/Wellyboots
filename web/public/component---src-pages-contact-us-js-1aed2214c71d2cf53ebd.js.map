{"version":3,"file":"component---src-pages-contact-us-js-1aed2214c71d2cf53ebd.js","mappings":"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","sources":["webpack://wellyboots-daycare-ltd/./src/components/Pages/Contact/ContactStyles.js","webpack://wellyboots-daycare-ltd/./src/components/Pages/Contact/Contact.js","webpack://wellyboots-daycare-ltd/./src/components/Pages/Contact/index.js","webpack://wellyboots-daycare-ltd/./src/pages/contact-us.js"],"sourcesContent":["// Imported Packages\nimport styled, { css } from 'styled-components/macro';\n// Imported Components\nimport {\n  Frame as FrameOrigin,\n  Row as RowOrigin,\n  Column as ColumnOrigin,\n  TextHeading,\n  TextParagraph,\n  Link as LinkOrigin,\n  Image as ImageOrigin\n} from '../../Reusable';\n\n// Styles\nexport const Container = styled.section`\n  background-color: var(--sectionBgColor);\n`\nexport const Frame = styled(FrameOrigin)``\nexport const Row = styled(RowOrigin)``\nexport const Column = styled(ColumnOrigin)`\n  position: relative;\n  ${({ elementSize }) => elementSize && css`\n    @media (min-width: 980px) {\n      height: ${elementSize}px;\n    }\n  `}\n`\n\nexport const Image = styled(ImageOrigin)`\n  @media (min-width: 980px) {\n    position: sticky;\n    margin-top: var(--s3);\n    top: 160px;\n    height: 500px;\n    transition: top .5s ease;\n    overflow: unset;\n  }\n  @media (min-width: 1200px) {\n    top: 184px;\n  }\n`\nexport const Title = styled(TextHeading)`\n  text-align: center;\n  @media (min-width: 980px) {\n    text-align: left;\n  }\n`\nexport const Text = styled(TextParagraph)`\n  text-align: center;\n  @media (min-width: 980px) {\n    text-align: left;\n  }\n`\nexport const Link = styled(LinkOrigin)``\nexport const Group = styled.div``\n","// Imported dependencies\nimport React, { useState, useEffect } from 'react'\nimport { AnimatePresence, motion } from 'framer-motion'\n// Imported components\nimport {\n  Container,\n  Frame,\n  Row,\n  Column,\n  Title,\n  Text,\n  Link,\n  Image,\n  Group,\n} from './ContactStyles'\n\nexport default function Contact({ children, className, bgColor, ...props }) {\n  return (\n      <Container\n        className={className}\n        style={{ '--sectionBgColor': bgColor && `rgb(var(--color${capitilise(bgColor)}))` }}\n        {...props}\n      >\n      {children}\n    </Container>\n  )\n}\n\nContact.Frame = function ContactFrame({ children, className, ...props }) {\n  return (\n    <Frame className={className} {...props}>{children}</Frame>\n  )\n}\n\nContact.Row = function ContactRow({ children, className, ...props }) {\n  return (<Row className={className} {...props}>{children}</Row>)\n}\n\nContact.Column = function ContactColumn({ children, className, ...props }) {\n  return (<Column className={className} {...props}>{children}</Column>)\n}\nContact.Title = function ContactTitle({ children, className, ...props }) {\n  return (<Title className={className} {...props}>{children}</Title>)\n}\n\nContact.Text = function ContactText({ children, className, ...props }) {\n  return (<Text className={className} {...props}>{children}</Text>)\n}\n\nContact.Link = function ContactLink({ children, className, ...props }) {\n  return (<Link className={className} {...props}> {children} </Link>)\n}\n\nContact.Image = function ContactImage({ className, ...props }) {\n  let randNumArr = [0]\n  // let lastNumber\n  let arr = Array(10)\n  // // const rand = () => Math.floor(Math.random() * arr.length) + 1\n  \n  // const getRandNumber = () => {\n  //   const rand = Math.floor(Math.random() * arr.length) + 1\n  //   randNumArr.map(res => {\n  //     console.log(rand == res);\n  //     if (rand == res) {\n  //       return getRandNumber()\n  //     }\n  //     return console.log(rand)\n  //   })\n  // }\n\n  // const handleClick = () => {\n  //   const number = getRandNumber()\n  //   console.log({number})\n  //   console.log(getRandNumber())\n  //   lastNumber = number \n  //   randNumArr.push(number)\n  // }\n\n  // useEffect(() => {\n  //   console.log({randNumArr, lastNumber})\n  // }, [randNumArr, lastNumber])\n  \n  let lastRoll = 0;\n  function myFunction() {\n    lastRoll = 0\n    let thisRoll = lastRoll;\n    randNumArr.filter(res => {\n      if (thisRoll === res) {\n        thisRoll = Math.floor(Math.random() * arr.length) + 1\n      }\n      return lastRoll = thisRoll;\n    })\n    console.log(lastRoll);\n  }\n\n\n  return (<Image className={className} onClick={myFunction} {...props} />)\n}\n\nContact.Group = function ContactGroup({ className, ...props }) {\n  return (<Group className={className} {...props} />)\n}\n","// Imported dependencies\nimport React, { useRef } from 'react'\nimport { useResizeObserver } from '../../../hooks'\n// Imported components\nimport Form from '../../Reusable/Form/index'\nimport Contact from './Contact'\n\n// The component\nexport const ContactIndex = () => {\n  const ref = useRef()\n  const elementSize = useResizeObserver(ref)\n  return (\n    <Contact>\n      <Contact.Frame bPad={10}>\n        <Contact.Row columns={2} xGap='94px' yGap={12}>\n\n          <Contact.Column columnOrder={2} innerRef={ref}>\n            <Contact.Row yGap={8}>\n\n              <Contact.Column xAlign=\"stretch\">\n                <Contact.Title heading=\"hero\" lineColor=\"Contact us\">\n                  Get in touch\n                </Contact.Title>\n              </Contact.Column>\n\n              <Contact.Column yGap={8}>\n                <Contact.Group>\n                  <Contact.Text>\n                    Please feel free to contact us about anything, at <strong>Wellyboots Daycare</strong> we are happy to receive any messages and answer any questions.\n                  </Contact.Text>\n                  <Contact.Text>\n                    Alternatively, for other ways to contact us please&nbsp;\n                    <Contact.Link to=\"#company-details\" lineColor=\"Contact us\" fixed>\n                      click here\n                    </Contact.Link>.\n                  </Contact.Text>\n                </Contact.Group>\n                <Form category=\"Contact us\" fieldColor=\"blue\" />\n              </Contact.Column>\n              \n            </Contact.Row>\n          </Contact.Column>\n\n          <Contact.Column \n            yGap={3} \n            columnOrder={1} \n            rowOrder={1} \n            xAlign=\"stretch\"\n          >\n            <Contact.Row>\n              <Contact.Column elementSize={elementSize[1]} xAlign=\"stretch\">\n                <Contact.Image \n                  name=\"kid-splashing-in-puddle\" \n                  alt=\"Boy jumping in a puddle\"\n                  objectFit=\"contain\"\n                />\n              </Contact.Column>\n            </Contact.Row>\n          </Contact.Column>\n\n        </Contact.Row>\n\n      </Contact.Frame>\n    </Contact>\n  )\n}\n\nexport default ContactIndex","// Imported dependencies\nimport React from 'react'\n// Imported components\nimport SEO from '../components/seo'\nimport Contact from '../components/Pages/Contact'\nimport { ReviewsPreview } from '../components/Pages/FrontPage'\n\nconst ContactUs = () => {\n  return (\n    <>\n      <SEO title=\"Contact us\" />\n      <Contact />\n      <ReviewsPreview />\n    </>\n  )\n}\n\nexport default ContactUs\n"],"names":["Container","styled","Frame","FrameOrigin","Row","RowOrigin","Column","ColumnOrigin","elementSize","css","Image","ImageOrigin","Title","TextHeading","Text","TextParagraph","Link","LinkOrigin","Group","Contact","children","className","bgColor","props","style","capitilise","randNumArr","arr","Array","lastRoll","onClick","thisRoll","filter","res","Math","floor","random","length","console","log","ref","useRef","useResizeObserver","bPad","columns","xGap","yGap","columnOrder","innerRef","xAlign","heading","lineColor","to","fixed","Form","category","fieldColor","rowOrder","name","alt","objectFit","title"],"sourceRoot":""}